version: "3.9"

services:
  nexign-database:
    image: postgres:14-alpine
    container_name: nexign-database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net
    volumes:
      - /var/lib/postgresql/data
    restart: always

  liquibase:
    image: liquibase/liquibase:4.17.2
    networks:
      - app-net
    command: liquibase --driver=org.postgresql.Driver --url=jdbc:postgresql://nexign-database:5432/postgres --password=postgres --username=postgres --changelog-file=/boot/db.changelog-master.xml update
    volumes:
      - ./liquibase/changelog:/liquibase/boot/changelog
      - ./liquibase/changelog/db.changelog-master.xml:/liquibase/boot/db.changelog-master.xml
      - ./liquibase/changelog/create-tariff-1.0.2.xml:/liquibase/boot/create-tariff-1.0.2.xml
      - ./liquibase/changelog/init-db-1.0.0.xml:/liquibase/boot/init-db-1.0.0.xml
      - ./liquibase/changelog/create-security-table-1.0.3.xml:/liquibase/boot/create-security-table-1.0.3.xml
      - ./liquibase/changelog/create-user-1.0.4.xml:/liquibase/boot/create-user-1.0.4.xml
    depends_on:
      nexign-database:
        condition: service_healthy

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka

  cdr:
    image:  sladkkov/cdr:2.0.3
    restart: always
    container_name: cdr
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_URL: jdbc:postgresql://nexign-database:5432/postgres
      EUREKA_SERVER: http://eureka:8761/eureka
      BOOTSTRAP_SERVERS_CONFIG: kafka:29092
    ports:
      - "7652:7652"
    networks:
      - app-net
      - kafka-net
    depends_on:
      nexign-database:
        condition: service_healthy
      eureka:
        condition: service_started
      kafka:
        condition: service_started

  brt:
    image:  sladkkov/brt:2.0.3
    restart: always
    container_name: brt
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_URL: jdbc:postgresql://nexign-database:5432/postgres
      EUREKA_SERVER: http://eureka:8761/eureka
      BOOTSTRAP_SERVERS_CONFIG: kafka:29092
    ports:
      - "7651:7651"
    networks:
      - app-net
      - kafka-net
    depends_on:
      nexign-database:
        condition: service_healthy
      eureka:
        condition: service_started
      kafka:
        condition: service_started

  hrs:
    image: sladkkov/hrs:2.0.3
    restart: always
    container_name: hrs
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_URL: jdbc:postgresql://nexign-database:5432/postgres
      EUREKA_SERVER: http://eureka:8761/eureka
      BOOTSTRAP_SERVERS_CONFIG: kafka:29092
    ports:
      - "7654:7654"
    networks:
      - app-net
      - kafka-net
    depends_on:
      nexign-database:
        condition: service_healthy
      eureka:
        condition: service_started
      kafka:
        condition: service_started

  crm:
    image:  sladkkov/crm:2.0.3
    restart: always
    container_name: crm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
      POSTGRES_URL: jdbc:postgresql://nexign-database:5432/postgres
      EUREKA_SERVER: http://eureka:8761/eureka/
    ports:
      - "7653:7653"
    networks:
      - app-net
      - kafka-net
    depends_on:
      nexign-database:
        condition: service_healthy
      eureka:
        condition: service_started

  eureka:
    image: sladkkov/eureka:2.0.2
    restart: always
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - app-net

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
  app-net:
    name: app-net
    driver: bridge

